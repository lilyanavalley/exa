
name: Packager

on:
  push:
    tags:
      - "v*.*"
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

jobs:

  testing:
    uses: ./.github/workflows/test.yaml

  package_matrix:
    needs: testing
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:

      - uses: actions/checkout@v4

        # Ubuntu requires additional dependencies for build.
      # See: https://fyrox-book.github.io/beginning/scripting.html#platform-specific-dependencies
      - name: Install build dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt install -y pkg-config libasound2-dev udev
          fi 
        shell: bash

      - run: rustup toolchain install stable --profile minimal

      # Cache build deps for faster building later.
      - uses: Swatinem/rust-cache@v2

      - name: Install Packager Utility
        run: cargo install cargo-packager

      # Package
      - name: Package for ${{ matrix.os }}
        run: cargo packager --release

      # Makes webtorrents of release
      - name: Make torrent
        uses: devopsx/action-torrent@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onefile: true
          files: |
            .git/
            .vscode/
            data/
            editor/
            executor/
            executor-*/
            game/
            target/**/*(executor*|exa_*)
            **/Cargo.*
            **/*.md
            .gitignore

      # Create release
      - name: Make release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.SOFTPROPS_ACTION_GH_RELEASE }}
          name: ${{ github.ref_name }}
          fail_on_unmatched_files: false
          files: |
            .git/
            .vscode/
            data/
            editor/
            executor/
            executor-*/
            game/
            target/**/*(executor*|exa_*)
            torrents/
            **/Cargo.*
            **/*.md
            .gitignore
